diff --git a/node_modules/highlight.js/dax.xlsx b/node_modules/highlight.js/dax.xlsx
new file mode 100644
index 0000000..960ed00
Binary files /dev/null and b/node_modules/highlight.js/dax.xlsx differ
diff --git a/node_modules/highlight.js/es/languages/dax.js b/node_modules/highlight.js/es/languages/dax.js
new file mode 100644
index 0000000..45ea61d
--- /dev/null
+++ b/node_modules/highlight.js/es/languages/dax.js
@@ -0,0 +1,697 @@
+function dax(hljs) {
+    const regex = hljs.regex;
+    const COMMENT_MODE = hljs.COMMENT('//', '/*');
+    const STRING = {
+        className: 'string',
+        variants: [{
+            begin: /"/,
+            end: /"/,
+            contains: [{ begin: /""/ }]
+        }]
+    };
+    const QUOTED_IDENTIFIER = {
+        begin: /'/,
+        end: /'/,
+        contains: [{ begin: /''/ }]
+    };
+
+    const LITERALS = [
+        "true",
+        "false",
+        // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.
+        // "null",
+        "unknown"
+    ];
+
+    const MULTI_WORD_TYPES = [
+        "double precision",
+        "large object",
+        "with timezone",
+        "without timezone"
+    ];
+
+    const TYPES = [];
+
+    const NON_RESERVED_WORDS = [
+        "add",
+        "asc",
+        "collation",
+        "desc",
+        "final",
+        "first",
+        "last",
+        "view"
+    ];
+
+    // https://jakewheat.github.io/dax-overview/dax-2016-foundation-grammar.html#reserved-word
+    const RESERVED_WORDS = [
+        'VAR',
+        'RETURN',
+        'DEFINE',
+        'EVALUATE',
+        'MEASURE',
+    ]
+
+    // these are reserved words we have identified to be functions
+    // and should only be highlighted in a dispatch-like context
+    // ie, array_agg(...), etc.
+    const RESERVED_FUNCTIONS = [
+        'ADDCALCULATEDMEMBERS',
+        'AGGREGATE',
+        'ALLMEMBERS',
+        'ALLMEMBERS',
+        'ANCESTOR',
+        'ANCESTOR',
+        'ANCESTORS',
+        'ANCESTORS',
+        'ASCENDANTS',
+        'AVG',
+        'AXIS',
+        'BOTTOMCOUNT',
+        'BOTTOMPERCENT',
+        'BOTTOMSUM',
+        'CALCULATIONCURRENTPASS',
+        'CALCULATIONPASSVALUE',
+        'CHILDREN',
+        'CLOSINGPERIOD',
+        'COALESCEEMPTY',
+        'CORRELATION',
+        'DIMENSIONS.COUNT',
+        'COUNT',
+        'COUNT',
+        'LEVELS.COUNT',
+        'COUNT',
+        'COUSIN',
+        'COVARIANCE',
+        'COVARIANCEN',
+        'CROSSJOIN',
+        'CURRENT',
+        'CURRENTMEMBER',
+        'CURRENTORDINAL',
+        'CUSTOMDATA',
+        'DATAMEMBER',
+        'DEFAULTMEMBER',
+        'DESCENDANTS',
+        'DESCENDANTS',
+        'DISTINCT',
+        'DISTINCTCOUNT',
+        'DRILLDOWNLEVEL',
+        'DRILLDOWNLEVEL',
+        'DRILLDOWNLEVELBOTTOM',
+        'DRILLDOWNLEVELTOP',
+        'DRILLDOWNMEMBER',
+        'DRILLDOWNMEMBERBOTTOM',
+        'DRILLDOWNMEMBERTOP',
+        'DRILLUPLEVEL',
+        'DRILLUPMEMBER',
+        'EXCEPT',
+        'EXISTING',
+        'EXISTS',
+        'EXTRACT',
+        'FILTER',
+        'FIRSTCHILD',
+        'FIRSTSIBLING',
+        'GENERATE',
+        'GENERATE',
+        'HEAD',
+        'HIERARCHIZE',
+        'HIERARCHY',
+        'HIERARCHY',
+        'IIF',
+        'INTERSECT',
+        'IS',
+        'ISANCESTOR',
+        'ISEMPTY',
+        'ISGENERATION',
+        'ISLEAF',
+        'ISSIBLING',
+        'ITEM',
+        'ITEM',
+        'KPICURRENTTIMEMEMBER',
+        'KPIGOAL',
+        'KPISTATUS',
+        'KPITREND',
+        'KPIVALUE',
+        'KPIWEIGHT',
+        'LAG',
+        'LASTCHILD',
+        'LASTPERIODS',
+        'LASTSIBLING',
+        'LEAD',
+        'LEVEL',
+        'LEVELS',
+        'LINKMEMBER',
+        'LINREGINTERCEPT',
+        'LINREGPOINT',
+        'LINREGR2',
+        'LINREGSLOPE',
+        'LINREGVARIANCE',
+        'LOOKUPCUBE',
+        'MAX',
+        'MEASUREGROUPMEASURES',
+        'MEDIAN',
+        'MEMBERS',
+        'MEMBERS',
+        'MEMBERTOSTR',
+        'MEMBERVALUE',
+        'MIN',
+        'MTD',
+        'NAME',
+        'NAME',
+        'NAME',
+        'NAMETOSET',
+        'NEXTMEMBER',
+        'NONEMPTY',
+        'NONEMPTYCROSSJOIN',
+        'OPENINGPERIOD',
+        'ORDER',
+        'ORDINAL',
+        'PARALLELPERIOD',
+        'PARENT',
+        'PERIODSTODATE',
+        'PREDICT',
+        'PREVMEMBER',
+        'PROPERTIES',
+        'QTD',
+        'RANK',
+        'ROLLUPCHILDREN',
+        'SETTOARRAY',
+        'SETTOSTR',
+        'SIBLINGS',
+        'STDDEV',
+        'STDDEVP',
+        'STDEVP',
+        'STDEVP',
+        'STRIPCALCULATEDMEMBERS',
+        'STRTOMEMBER',
+        'STRTOSET',
+        'STRTOTUPLE',
+        'STRTOVALUE',
+        'SUBSET',
+        'SUM',
+        'TAIL',
+        'TOGGLEDRILLSTATE',
+        'TOPCOUNT',
+        'TOPPERCENT',
+        'TOPSUM',
+        'TUPLETOSTR',
+        'UNION',
+        'UNIQUENAME',
+        'UNIQUENAME',
+        'UNIQUENAME',
+        'UNKNOWNMEMBER',
+        'UNORDER',
+        'VALIDMEASURE',
+        'VALUE',
+        'VARIANCE',
+        'VARIANCEP',
+        'VARP',
+        'VISUALTOTALS',
+        'WTD',
+        'YTD',
+        'DATE',
+        'DATEDIFF',
+        'DATEVALUE',
+        'DAY',
+        'EDATE',
+        'EOMONTH',
+        'HOUR',
+        'MINUTE',
+        'MONTH',
+        'NETWORKDAYS',
+        'NOW',
+        'QUARTER',
+        'SECOND',
+        'TIME',
+        'TIMEVALUE',
+        'TODAY',
+        'UTCNOW',
+        'UTCTODAY',
+        'WEEKDAY',
+        'WEEKNUM',
+        'YEAR',
+        'YEARFRAC',
+        'BITAND',
+        'BITLSHIFT',
+        'BITOR',
+        'BITRSHIFT',
+        'BITXOR',
+        'ACCRINT',
+        'ACCRINTM',
+        'AMORDEGRC',
+        'AMORLINC',
+        'COUPDAYBS',
+        'COUPDAYS',
+        'COUPDAYSNC',
+        'COUPNCD',
+        'COUPNUM',
+        'COUPPCD',
+        'CUMIPMT',
+        'CUMPRINC',
+        'DB',
+        'DDB',
+        'DISC',
+        'DOLLARDE',
+        'DOLLARFR',
+        'DURATION',
+        'EFFECT',
+        'FV',
+        'INTRATE',
+        'IPMT',
+        'ISPMT',
+        'MDURATION',
+        'NOMINAL',
+        'NPER',
+        'ODDFPRICE',
+        'ODDFYIELD',
+        'ODDLPRICE',
+        'ODDLYIELD',
+        'PDURATION',
+        'PMT',
+        'PPMT',
+        'PRICE',
+        'PRICEDISC',
+        'PRICEMAT',
+        'PV',
+        'RATE',
+        'RECEIVED',
+        'RRI',
+        'SLN',
+        'SYD',
+        'TBILLEQ',
+        'TBILLPRICE',
+        'TBILLYIELD',
+        'VDB',
+        'YIELD',
+        'YIELDDISC',
+        'YIELDMAT',
+        'COMBINEVALUES',
+        'CONTAINS',
+        'CONTAINSROW',
+        'CONVERT',
+        'CUSTOMDATA',
+        'ERROR',
+        'HASONEFILTER',
+        'HASONEVALUE',
+        'ISBLANK',
+        'ISCROSSFILTERED',
+        'ISEMPTY',
+        'ISERROR',
+        'ISEVEN',
+        'ISFILTERED',
+        'ISINSCOPE',
+        'ISLOGICAL',
+        'ISNONTEXT',
+        'ISNUMBER',
+        'ISODD',
+        'ISSUBTOTAL',
+        'ISTEXT',
+        'USERCULTURE',
+        'USERNAME',
+        'USEROBJECTID',
+        'USERPRINCIPALNAME',
+        'AND',
+        'COALESCE',
+        'FALSE',
+        'IF',
+        'IF.EAGER',
+        'IFERROR',
+        'NAMEOF',
+        'NOT',
+        'OR',
+        'SWITCH',
+        'TRUE',
+        'ABS',
+        'ACOS',
+        'ACOSH',
+        'ACOT',
+        'ACOTH',
+        'ASIN',
+        'ASINH',
+        'ATAN',
+        'ATANH',
+        'BETA.DIST',
+        'BETA.INV',
+        'CEILING',
+        'CHISQ.DIST',
+        'CHISQ.DIST.RT',
+        'CHISQ.INV',
+        'CHISQ.INV.RT',
+        'COMBIN',
+        'COMBINA',
+        'CONFIDENCE.NORM',
+        'CONFIDENCE.T',
+        'COS',
+        'COSH',
+        'COT',
+        'COTH',
+        'CURRENCY',
+        'DEGREES',
+        'EVEN',
+        'EXP',
+        'EXPON.DIST',
+        'FACT',
+        'FLOOR',
+        'GCD',
+        'INT',
+        'ISO.CEILING',
+        'LCM',
+        'LN',
+        'LOG',
+        'LOG10',
+        'MOD',
+        'MROUND',
+        'NORM.DIST',
+        'NORM.INV',
+        'NORM.S.DIST',
+        'NORM.S.INV',
+        'ODD',
+        'PERMUT',
+        'PI',
+        'POISSON.DIST',
+        'POWER',
+        'QUOTIENT',
+        'RADIANS',
+        'RAND',
+        'RANDBETWEEN',
+        'ROUND',
+        'ROUNDDOWN',
+        'ROUNDUP',
+        'SIGN',
+        'SIN',
+        'SINH',
+        'SQRT',
+        'SQRTPI',
+        'T.DIST',
+        'T.DIST.2T',
+        'T.DIST.RT',
+        'T.INV',
+        'T.INV.2T',
+        'TAN',
+        'TANH',
+        'TRUNC',
+        'BLANK',
+        'CONCATENATE',
+        'CONCATENATEX',
+        'CONTAINSSTRING',
+        'CONTAINSSTRINGEXACT',
+        'EVALUATEANDLOG',
+        'EXACT',
+        'FIND',
+        'FIXED',
+        'FORMAT',
+        'LEFT',
+        'LEN',
+        'LOWER',
+        'MID',
+        'REPLACE',
+        'REPT',
+        'RIGHT',
+        'SEARCH',
+        'SUBSTITUTE',
+        'TOCSV',
+        'TOJSON',
+        'TRIM',
+        'UNICHAR',
+        'UNICODE',
+        'UPPER',
+        'VALUE',
+        'CLOSINGBALANCEMONTH',
+        'CLOSINGBALANCEQUARTER',
+        'CLOSINGBALANCEYEAR',
+        'DATEADD',
+        'DATESBETWEEN',
+        'DATESINPERIOD',
+        'DATESMTD',
+        'DATESQTD',
+        'DATESYTD',
+        'ENDOFMONTH',
+        'ENDOFQUARTER',
+        'ENDOFYEAR',
+        'FIRSTDATE',
+        'FIRSTNONBLANK',
+        'FIRSTNONBLANKVALUE',
+        'LASTDATE',
+        'LASTNONBLANK',
+        'LASTNONBLANKVALUE',
+        'NEXTDAY',
+        'NEXTMONTH',
+        'NEXTQUARTER',
+        'NEXTYEAR',
+        'OPENINGBALANCEMONTH',
+        'OPENINGBALANCEQUARTER',
+        'OPENINGBALANCEYEAR',
+        'PARALLELPERIOD',
+        'PREVIOUSDAY',
+        'PREVIOUSMONTH',
+        'PREVIOUSQUARTER',
+        'PREVIOUSYEAR',
+        'SAMEPERIODLASTYEAR',
+        'STARTOFMONTH',
+        'STARTOFQUARTER',
+        'STARTOFYEAR',
+        'TOTALMTD',
+        'TOTALQTD',
+        'TOTALYTD',
+        'ADDCOLUMNS',
+        'ALL',
+        'ALLCROSSFILTERED',
+        'ALLEXCEPT',
+        'ALLNOBLANKROW',
+        'ALLSELECTED',
+        'CALCULATE',
+        'CALCULATETABLE',
+        'CALENDAR',
+        'CALENDARAUTO',
+        'CROSSFILTER',
+        'CROSSJOIN',
+        'DATATABLE',
+        'DETAILROWS',
+        'DISTINCT',
+        'EARLIER',
+        'EARLIEST',
+        'EXCEPT',
+        'FILTER',
+        'FILTERS',
+        'GENERATE',
+        'GENERATEALL',
+        'GENERATESERIES',
+        'IGNORE',
+        'INTERSECT',
+        'ISAFTER',
+        'ISONORAFTER',
+        'ISSELECTEDMEASURE',
+        'KEEPFILTERS',
+        'LOOKUPVALUE',
+        'NATURALINNERJOIN',
+        'NATURALLEFTOUTERJOIN',
+        'RELATED',
+        'RELATEDTABLE',
+        'REMOVEFILTERS',
+        'ROW',
+        'SELECTCOLUMNS',
+        'SELECTEDMEASURE',
+        'SELECTEDMEASUREFORMATSTRING',
+        'SELECTEDMEASURENAME',
+        'SELECTEDVALUE',
+        'SUMMARIZE',
+        'TOPN',
+        'TREATAS',
+        'UNION',
+        'USERELATIONSHIP',
+        'VALUES',
+        'SUM',
+        'SUMX',
+        'PATH',
+        'PATHCONTAINS',
+        'PATHITEM',
+        'PATHITEMREVERSE',
+        'PATHLENGTH',
+        'ADDMISSINGITEMS',
+        'CURRENTGROUP',
+        'GROUPBY',
+        'NONVISUAL',
+        'ROLLUP',
+        'ROLLUPADDISSUBTOTAL',
+        'ROLLUPGROUP',
+        'ROLLUPISSUBTOTAL',
+        'SAMPLE',
+        'SUBSTITUTEWITHINDEX',
+        'SUMMARIZECOLUMNS',
+        'AVERAGE',
+        'AVERAGEA',
+        'AVERAGEX',
+        'COUNT',
+        'COUNTA',
+        'COUNTAX',
+        'COUNTBLANK',
+        'COUNTROWS',
+        'COUNTX',
+        'DISTINCTCOUNT',
+        'DISTINCTCOUNTNOBLANK',
+        'DIVIDE',
+        'GEOMEAN',
+        'GEOMEANX',
+        'LINEST',
+        'LINESTX',
+        'MAX',
+        'MAXA',
+        'MAXX',
+        'MEDIAN',
+        'MEDIANX',
+        'MIN',
+        'MINA',
+        'MINX',
+        'PERCENTILE.EXC',
+        'PERCENTILE.INC',
+        'PERCENTILEX.EXC',
+        'PERCENTILEX.INC',
+        'PRODUCT',
+        'PRODUCTX',
+        'RANK.EQ',
+        'RANKX',
+        'STDEV.P',
+        'STDEV.S',
+        'STDEVX.P',
+        'STDEVX.S',
+        'VAR.P',
+        'VAR.S',
+        'VARX.P',
+        'VARX.S',
+        'XIRR',
+        'XNPV',
+        'COLUMNSTATISTICS',
+        'INDEX',
+        'OFFSET',
+        'ORDERBY',
+        'PARTITIONBY',
+        'WINDOW',
+    ];
+
+    // these functions can
+    const POSSIBLE_WITHOUT_PARENS = [
+        "current_catalog",
+        "current_date",
+        "current_default_transform_group",
+        "current_path",
+        "current_role",
+        "current_schema",
+        "current_transform_group_for_type",
+        "current_user",
+        "session_user",
+        "system_time",
+        "system_user",
+        "current_time",
+        "localtime",
+        "current_timestamp",
+        "localtimestamp"
+    ];
+
+    // those exist to boost relevance making these very
+    // "DAX like" keyword combos worth +1 extra relevance
+    const COMBOS = [
+        "create table",
+        "insert into",
+        "primary key",
+        "foreign key",
+        "not null",
+        "alter table",
+        "add constraint",
+        "grouping sets",
+        "on overflow",
+        "character set",
+        "respect nulls",
+        "ignore nulls",
+        "nulls first",
+        "nulls last",
+        "depth first",
+        "breadth first"
+    ];
+
+    const FUNCTIONS = RESERVED_FUNCTIONS;
+
+    const KEYWORDS = [
+        ...RESERVED_WORDS,
+        ...NON_RESERVED_WORDS
+    ].filter((keyword) => {
+        return !RESERVED_FUNCTIONS.includes(keyword);
+    });
+
+    const VARIABLE = {
+        className: 'variable',
+        // 匹配出 VAR 位置的变量
+        // begin: /(?<=\bVAR\s)(\w+)(?=\s*=)/g,
+        begin: /(?<=\bVAR\s)(\w+)(?=\s*=)/g,
+    }
+
+}
+
+const OPERATOR = {
+    className: "operator",
+    begin: /[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,
+    relevance: 0,
+};
+
+const FUNCTION_CALL = {
+    begin: regex.concat(/\b/, regex.either(...FUNCTIONS), /\s*\(/),
+    relevance: 0,
+    keywords: { built_in: FUNCTIONS }
+};
+
+// keywords with less than 3 letters are reduced in relevancy
+function reduceRelevancy(list, {
+    exceptions,
+    when
+} = {}) {
+    const qualifyFn = when;
+    exceptions = exceptions || [];
+    return list.map((item) => {
+        if (item.match(/\|\d+$/) || exceptions.includes(item)) {
+            return item;
+        } else if (qualifyFn(item)) {
+            return `${item}|0`;
+        } else {
+            return item;
+        }
+    });
+}
+
+return {
+    name: 'DAX',
+    case_insensitive: true,
+    // does not include {} or HTML tags `</`
+    illegal: /[{}]|<\//,
+    keywords: {
+        $pattern: /\b[\w\.]+/,
+        keyword: reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),
+        literal: LITERALS,
+        type: TYPES,
+        built_in: POSSIBLE_WITHOUT_PARENS
+    },
+    contains: [{
+            begin: regex.either(...COMBOS),
+            relevance: 0,
+            keywords: {
+                $pattern: /[\w\.]+/,
+                keyword: KEYWORDS.concat(COMBOS),
+                literal: LITERALS,
+                type: TYPES
+            },
+        },
+        {
+            className: "type",
+            begin: regex.either(...MULTI_WORD_TYPES)
+        },
+        FUNCTION_CALL,
+        VARIABLE,
+        STRING,
+        QUOTED_IDENTIFIER,
+        hljs.C_NUMBER_MODE,
+        hljs.C_BLOCK_COMMENT_MODE,
+        COMMENT_MODE,
+        OPERATOR
+    ]
+};
+}
+
+export { dax as default };
\ No newline at end of file
diff --git a/node_modules/highlight.js/es/languages/dax.js.js b/node_modules/highlight.js/es/languages/dax.js.js
new file mode 100644
index 0000000..ff5bcba
--- /dev/null
+++ b/node_modules/highlight.js/es/languages/dax.js.js
@@ -0,0 +1,11 @@
+function emitWarning() {
+    if (!emitWarning.warned) {
+        emitWarning.warned = true;
+        console.log(
+            'Deprecation (warning): Using file extension in specifier is deprecated, use "highlight.js/lib/languages/dax" instead of "highlight.js/lib/languages/dax.js"'
+        );
+    }
+}
+emitWarning();
+import lang from './dax.js';
+export default lang;
\ No newline at end of file
diff --git a/node_modules/highlight.js/lib/common.js b/node_modules/highlight.js/lib/common.js
index d8386cf..5edfc2f 100644
--- a/node_modules/highlight.js/lib/common.js
+++ b/node_modules/highlight.js/lib/common.js
@@ -31,6 +31,7 @@ hljs.registerLanguage('rust', require('./languages/rust'));
 hljs.registerLanguage('scss', require('./languages/scss'));
 hljs.registerLanguage('shell', require('./languages/shell'));
 hljs.registerLanguage('sql', require('./languages/sql'));
+hljs.registerLanguage('dax', require('./languages/dax'));
 hljs.registerLanguage('swift', require('./languages/swift'));
 hljs.registerLanguage('yaml', require('./languages/yaml'));
 hljs.registerLanguage('typescript', require('./languages/typescript'));
diff --git a/node_modules/highlight.js/lib/index.js b/node_modules/highlight.js/lib/index.js
index 5da9ad4..5a8e45a 100644
--- a/node_modules/highlight.js/lib/index.js
+++ b/node_modules/highlight.js/lib/index.js
@@ -165,6 +165,7 @@ hljs.registerLanguage('smalltalk', require('./languages/smalltalk'));
 hljs.registerLanguage('sml', require('./languages/sml'));
 hljs.registerLanguage('sqf', require('./languages/sqf'));
 hljs.registerLanguage('sql', require('./languages/sql'));
+hljs.registerLanguage('dax', require('./languages/dax'));
 hljs.registerLanguage('stan', require('./languages/stan'));
 hljs.registerLanguage('stata', require('./languages/stata'));
 hljs.registerLanguage('step21', require('./languages/step21'));
diff --git a/node_modules/highlight.js/lib/languages/dax.js b/node_modules/highlight.js/lib/languages/dax.js
new file mode 100644
index 0000000..ca14310
--- /dev/null
+++ b/node_modules/highlight.js/lib/languages/dax.js
@@ -0,0 +1,696 @@
+function dax(hljs) {
+    const regex = hljs.regex;
+    const COMMENT_MODE = hljs.COMMENT('//', '/*');
+    const STRING = {
+        className: 'string',
+        variants: [{
+            begin: /"/,
+            end: /"/,
+            contains: [{ begin: /""/ }]
+        }]
+    };
+    const QUOTED_IDENTIFIER = {
+        begin: /'/,
+        end: /'/,
+        contains: [{ begin: /''/ }]
+    };
+
+    const LITERALS = [
+        "true",
+        "false",
+        // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.
+        // "null",
+        "unknown"
+    ];
+
+    const MULTI_WORD_TYPES = [
+        "double precision",
+        "large object",
+        "with timezone",
+        "without timezone"
+    ];
+
+    const TYPES = [];
+
+    const NON_RESERVED_WORDS = [
+        "add",
+        "asc",
+        "collation",
+        "desc",
+        "final",
+        "first",
+        "last",
+        "view"
+    ];
+
+    // https://jakewheat.github.io/dax-overview/dax-2016-foundation-grammar.html#reserved-word
+    const RESERVED_WORDS = [
+        'VAR',
+        'RETURN',
+        'DEFINE',
+        'EVALUATE',
+        'MEASURE',
+    ]
+
+    // these are reserved words we have identified to be functions
+    // and should only be highlighted in a dispatch-like context
+    // ie, array_agg(...), etc.
+    const RESERVED_FUNCTIONS = [
+        'ADDCALCULATEDMEMBERS',
+        'AGGREGATE',
+        'ALLMEMBERS',
+        'ALLMEMBERS',
+        'ANCESTOR',
+        'ANCESTOR',
+        'ANCESTORS',
+        'ANCESTORS',
+        'ASCENDANTS',
+        'AVG',
+        'AXIS',
+        'BOTTOMCOUNT',
+        'BOTTOMPERCENT',
+        'BOTTOMSUM',
+        'CALCULATIONCURRENTPASS',
+        'CALCULATIONPASSVALUE',
+        'CHILDREN',
+        'CLOSINGPERIOD',
+        'COALESCEEMPTY',
+        'CORRELATION',
+        'DIMENSIONS.COUNT',
+        'COUNT',
+        'COUNT',
+        'LEVELS.COUNT',
+        'COUNT',
+        'COUSIN',
+        'COVARIANCE',
+        'COVARIANCEN',
+        'CROSSJOIN',
+        'CURRENT',
+        'CURRENTMEMBER',
+        'CURRENTORDINAL',
+        'CUSTOMDATA',
+        'DATAMEMBER',
+        'DEFAULTMEMBER',
+        'DESCENDANTS',
+        'DESCENDANTS',
+        'DISTINCT',
+        'DISTINCTCOUNT',
+        'DRILLDOWNLEVEL',
+        'DRILLDOWNLEVEL',
+        'DRILLDOWNLEVELBOTTOM',
+        'DRILLDOWNLEVELTOP',
+        'DRILLDOWNMEMBER',
+        'DRILLDOWNMEMBERBOTTOM',
+        'DRILLDOWNMEMBERTOP',
+        'DRILLUPLEVEL',
+        'DRILLUPMEMBER',
+        'EXCEPT',
+        'EXISTING',
+        'EXISTS',
+        'EXTRACT',
+        'FILTER',
+        'FIRSTCHILD',
+        'FIRSTSIBLING',
+        'GENERATE',
+        'GENERATE',
+        'HEAD',
+        'HIERARCHIZE',
+        'HIERARCHY',
+        'HIERARCHY',
+        'IIF',
+        'INTERSECT',
+        'IS',
+        'ISANCESTOR',
+        'ISEMPTY',
+        'ISGENERATION',
+        'ISLEAF',
+        'ISSIBLING',
+        'ITEM',
+        'ITEM',
+        'KPICURRENTTIMEMEMBER',
+        'KPIGOAL',
+        'KPISTATUS',
+        'KPITREND',
+        'KPIVALUE',
+        'KPIWEIGHT',
+        'LAG',
+        'LASTCHILD',
+        'LASTPERIODS',
+        'LASTSIBLING',
+        'LEAD',
+        'LEVEL',
+        'LEVELS',
+        'LINKMEMBER',
+        'LINREGINTERCEPT',
+        'LINREGPOINT',
+        'LINREGR2',
+        'LINREGSLOPE',
+        'LINREGVARIANCE',
+        'LOOKUPCUBE',
+        'MAX',
+        'MEASUREGROUPMEASURES',
+        'MEDIAN',
+        'MEMBERS',
+        'MEMBERS',
+        'MEMBERTOSTR',
+        'MEMBERVALUE',
+        'MIN',
+        'MTD',
+        'NAME',
+        'NAME',
+        'NAME',
+        'NAMETOSET',
+        'NEXTMEMBER',
+        'NONEMPTY',
+        'NONEMPTYCROSSJOIN',
+        'OPENINGPERIOD',
+        'ORDER',
+        'ORDINAL',
+        'PARALLELPERIOD',
+        'PARENT',
+        'PERIODSTODATE',
+        'PREDICT',
+        'PREVMEMBER',
+        'PROPERTIES',
+        'QTD',
+        'RANK',
+        'ROLLUPCHILDREN',
+        'SETTOARRAY',
+        'SETTOSTR',
+        'SIBLINGS',
+        'STDDEV',
+        'STDDEVP',
+        'STDEVP',
+        'STDEVP',
+        'STRIPCALCULATEDMEMBERS',
+        'STRTOMEMBER',
+        'STRTOSET',
+        'STRTOTUPLE',
+        'STRTOVALUE',
+        'SUBSET',
+        'SUM',
+        'TAIL',
+        'TOGGLEDRILLSTATE',
+        'TOPCOUNT',
+        'TOPPERCENT',
+        'TOPSUM',
+        'TUPLETOSTR',
+        'UNION',
+        'UNIQUENAME',
+        'UNIQUENAME',
+        'UNIQUENAME',
+        'UNKNOWNMEMBER',
+        'UNORDER',
+        'VALIDMEASURE',
+        'VALUE',
+        'VARIANCE',
+        'VARIANCEP',
+        'VARP',
+        'VISUALTOTALS',
+        'WTD',
+        'YTD',
+        'DATE',
+        'DATEDIFF',
+        'DATEVALUE',
+        'DAY',
+        'EDATE',
+        'EOMONTH',
+        'HOUR',
+        'MINUTE',
+        'MONTH',
+        'NETWORKDAYS',
+        'NOW',
+        'QUARTER',
+        'SECOND',
+        'TIME',
+        'TIMEVALUE',
+        'TODAY',
+        'UTCNOW',
+        'UTCTODAY',
+        'WEEKDAY',
+        'WEEKNUM',
+        'YEAR',
+        'YEARFRAC',
+        'BITAND',
+        'BITLSHIFT',
+        'BITOR',
+        'BITRSHIFT',
+        'BITXOR',
+        'ACCRINT',
+        'ACCRINTM',
+        'AMORDEGRC',
+        'AMORLINC',
+        'COUPDAYBS',
+        'COUPDAYS',
+        'COUPDAYSNC',
+        'COUPNCD',
+        'COUPNUM',
+        'COUPPCD',
+        'CUMIPMT',
+        'CUMPRINC',
+        'DB',
+        'DDB',
+        'DISC',
+        'DOLLARDE',
+        'DOLLARFR',
+        'DURATION',
+        'EFFECT',
+        'FV',
+        'INTRATE',
+        'IPMT',
+        'ISPMT',
+        'MDURATION',
+        'NOMINAL',
+        'NPER',
+        'ODDFPRICE',
+        'ODDFYIELD',
+        'ODDLPRICE',
+        'ODDLYIELD',
+        'PDURATION',
+        'PMT',
+        'PPMT',
+        'PRICE',
+        'PRICEDISC',
+        'PRICEMAT',
+        'PV',
+        'RATE',
+        'RECEIVED',
+        'RRI',
+        'SLN',
+        'SYD',
+        'TBILLEQ',
+        'TBILLPRICE',
+        'TBILLYIELD',
+        'VDB',
+        'YIELD',
+        'YIELDDISC',
+        'YIELDMAT',
+        'COMBINEVALUES',
+        'CONTAINS',
+        'CONTAINSROW',
+        'CONVERT',
+        'CUSTOMDATA',
+        'ERROR',
+        'HASONEFILTER',
+        'HASONEVALUE',
+        'ISBLANK',
+        'ISCROSSFILTERED',
+        'ISEMPTY',
+        'ISERROR',
+        'ISEVEN',
+        'ISFILTERED',
+        'ISINSCOPE',
+        'ISLOGICAL',
+        'ISNONTEXT',
+        'ISNUMBER',
+        'ISODD',
+        'ISSUBTOTAL',
+        'ISTEXT',
+        'USERCULTURE',
+        'USERNAME',
+        'USEROBJECTID',
+        'USERPRINCIPALNAME',
+        'AND',
+        'COALESCE',
+        'FALSE',
+        'IF',
+        'IF.EAGER',
+        'IFERROR',
+        'NAMEOF',
+        'NOT',
+        'OR',
+        'SWITCH',
+        'TRUE',
+        'ABS',
+        'ACOS',
+        'ACOSH',
+        'ACOT',
+        'ACOTH',
+        'ASIN',
+        'ASINH',
+        'ATAN',
+        'ATANH',
+        'BETA.DIST',
+        'BETA.INV',
+        'CEILING',
+        'CHISQ.DIST',
+        'CHISQ.DIST.RT',
+        'CHISQ.INV',
+        'CHISQ.INV.RT',
+        'COMBIN',
+        'COMBINA',
+        'CONFIDENCE.NORM',
+        'CONFIDENCE.T',
+        'COS',
+        'COSH',
+        'COT',
+        'COTH',
+        'CURRENCY',
+        'DEGREES',
+        'EVEN',
+        'EXP',
+        'EXPON.DIST',
+        'FACT',
+        'FLOOR',
+        'GCD',
+        'INT',
+        'ISO.CEILING',
+        'LCM',
+        'LN',
+        'LOG',
+        'LOG10',
+        'MOD',
+        'MROUND',
+        'NORM.DIST',
+        'NORM.INV',
+        'NORM.S.DIST',
+        'NORM.S.INV',
+        'ODD',
+        'PERMUT',
+        'PI',
+        'POISSON.DIST',
+        'POWER',
+        'QUOTIENT',
+        'RADIANS',
+        'RAND',
+        'RANDBETWEEN',
+        'ROUND',
+        'ROUNDDOWN',
+        'ROUNDUP',
+        'SIGN',
+        'SIN',
+        'SINH',
+        'SQRT',
+        'SQRTPI',
+        'T.DIST',
+        'T.DIST.2T',
+        'T.DIST.RT',
+        'T.INV',
+        'T.INV.2T',
+        'TAN',
+        'TANH',
+        'TRUNC',
+        'BLANK',
+        'CONCATENATE',
+        'CONCATENATEX',
+        'CONTAINSSTRING',
+        'CONTAINSSTRINGEXACT',
+        'EVALUATEANDLOG',
+        'EXACT',
+        'FIND',
+        'FIXED',
+        'FORMAT',
+        'LEFT',
+        'LEN',
+        'LOWER',
+        'MID',
+        'REPLACE',
+        'REPT',
+        'RIGHT',
+        'SEARCH',
+        'SUBSTITUTE',
+        'TOCSV',
+        'TOJSON',
+        'TRIM',
+        'UNICHAR',
+        'UNICODE',
+        'UPPER',
+        'VALUE',
+        'CLOSINGBALANCEMONTH',
+        'CLOSINGBALANCEQUARTER',
+        'CLOSINGBALANCEYEAR',
+        'DATEADD',
+        'DATESBETWEEN',
+        'DATESINPERIOD',
+        'DATESMTD',
+        'DATESQTD',
+        'DATESYTD',
+        'ENDOFMONTH',
+        'ENDOFQUARTER',
+        'ENDOFYEAR',
+        'FIRSTDATE',
+        'FIRSTNONBLANK',
+        'FIRSTNONBLANKVALUE',
+        'LASTDATE',
+        'LASTNONBLANK',
+        'LASTNONBLANKVALUE',
+        'NEXTDAY',
+        'NEXTMONTH',
+        'NEXTQUARTER',
+        'NEXTYEAR',
+        'OPENINGBALANCEMONTH',
+        'OPENINGBALANCEQUARTER',
+        'OPENINGBALANCEYEAR',
+        'PARALLELPERIOD',
+        'PREVIOUSDAY',
+        'PREVIOUSMONTH',
+        'PREVIOUSQUARTER',
+        'PREVIOUSYEAR',
+        'SAMEPERIODLASTYEAR',
+        'STARTOFMONTH',
+        'STARTOFQUARTER',
+        'STARTOFYEAR',
+        'TOTALMTD',
+        'TOTALQTD',
+        'TOTALYTD',
+        'ADDCOLUMNS',
+        'ALL',
+        'ALLCROSSFILTERED',
+        'ALLEXCEPT',
+        'ALLNOBLANKROW',
+        'ALLSELECTED',
+        'CALCULATE',
+        'CALCULATETABLE',
+        'CALENDAR',
+        'CALENDARAUTO',
+        'CROSSFILTER',
+        'CROSSJOIN',
+        'DATATABLE',
+        'DETAILROWS',
+        'DISTINCT',
+        'EARLIER',
+        'EARLIEST',
+        'EXCEPT',
+        'FILTER',
+        'FILTERS',
+        'GENERATE',
+        'GENERATEALL',
+        'GENERATESERIES',
+        'IGNORE',
+        'INTERSECT',
+        'ISAFTER',
+        'ISONORAFTER',
+        'ISSELECTEDMEASURE',
+        'KEEPFILTERS',
+        'LOOKUPVALUE',
+        'NATURALINNERJOIN',
+        'NATURALLEFTOUTERJOIN',
+        'RELATED',
+        'RELATEDTABLE',
+        'REMOVEFILTERS',
+        'ROW',
+        'SELECTCOLUMNS',
+        'SELECTEDMEASURE',
+        'SELECTEDMEASUREFORMATSTRING',
+        'SELECTEDMEASURENAME',
+        'SELECTEDVALUE',
+        'SUMMARIZE',
+        'TOPN',
+        'TREATAS',
+        'UNION',
+        'USERELATIONSHIP',
+        'VALUES',
+        'SUM',
+        'SUMX',
+        'PATH',
+        'PATHCONTAINS',
+        'PATHITEM',
+        'PATHITEMREVERSE',
+        'PATHLENGTH',
+        'ADDMISSINGITEMS',
+        'CURRENTGROUP',
+        'GROUPBY',
+        'NONVISUAL',
+        'ROLLUP',
+        'ROLLUPADDISSUBTOTAL',
+        'ROLLUPGROUP',
+        'ROLLUPISSUBTOTAL',
+        'SAMPLE',
+        'SUBSTITUTEWITHINDEX',
+        'SUMMARIZECOLUMNS',
+        'AVERAGE',
+        'AVERAGEA',
+        'AVERAGEX',
+        'COUNT',
+        'COUNTA',
+        'COUNTAX',
+        'COUNTBLANK',
+        'COUNTROWS',
+        'COUNTX',
+        'DISTINCTCOUNT',
+        'DISTINCTCOUNTNOBLANK',
+        'DIVIDE',
+        'GEOMEAN',
+        'GEOMEANX',
+        'LINEST',
+        'LINESTX',
+        'MAX',
+        'MAXA',
+        'MAXX',
+        'MEDIAN',
+        'MEDIANX',
+        'MIN',
+        'MINA',
+        'MINX',
+        'PERCENTILE.EXC',
+        'PERCENTILE.INC',
+        'PERCENTILEX.EXC',
+        'PERCENTILEX.INC',
+        'PRODUCT',
+        'PRODUCTX',
+        'RANK.EQ',
+        'RANKX',
+        'STDEV.P',
+        'STDEV.S',
+        'STDEVX.P',
+        'STDEVX.S',
+        'VAR.P',
+        'VAR.S',
+        'VARX.P',
+        'VARX.S',
+        'XIRR',
+        'XNPV',
+        'COLUMNSTATISTICS',
+        'INDEX',
+        'OFFSET',
+        'ORDERBY',
+        'PARTITIONBY',
+        'WINDOW',
+    ];
+
+    // these functions can
+    const POSSIBLE_WITHOUT_PARENS = [
+        "current_catalog",
+        "current_date",
+        "current_default_transform_group",
+        "current_path",
+        "current_role",
+        "current_schema",
+        "current_transform_group_for_type",
+        "current_user",
+        "session_user",
+        "system_time",
+        "system_user",
+        "current_time",
+        "localtime",
+        "current_timestamp",
+        "localtimestamp"
+    ];
+
+    // those exist to boost relevance making these very
+    // "DAX like" keyword combos worth +1 extra relevance
+    const COMBOS = [
+        "create table",
+        "insert into",
+        "primary key",
+        "foreign key",
+        "not null",
+        "alter table",
+        "add constraint",
+        "grouping sets",
+        "on overflow",
+        "character set",
+        "respect nulls",
+        "ignore nulls",
+        "nulls first",
+        "nulls last",
+        "depth first",
+        "breadth first"
+    ];
+
+    const FUNCTIONS = RESERVED_FUNCTIONS;
+
+    const KEYWORDS = [
+        ...RESERVED_WORDS,
+        ...NON_RESERVED_WORDS
+    ].filter((keyword) => {
+        return !RESERVED_FUNCTIONS.includes(keyword);
+    });
+
+    const VARIABLE = {
+        className: "variable",
+        // 匹配出 VAR 位置的变量
+        // begin: /(?<=\bVAR\s)(\w+)(?=\s*=)/g,
+        begin: /(?<=\bVAR\s)(\w+)(?=\s*=)/g,
+
+    };
+
+    const OPERATOR = {
+        className: "operator",
+        begin: /[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,
+        relevance: 0,
+    };
+
+    const FUNCTION_CALL = {
+        begin: regex.concat(/\b/, regex.either(...FUNCTIONS), /\s*\(/),
+        relevance: 0,
+        keywords: { built_in: FUNCTIONS }
+    };
+
+    // keywords with less than 3 letters are reduced in relevancy
+    function reduceRelevancy(list, {
+        exceptions,
+        when
+    } = {}) {
+        const qualifyFn = when;
+        exceptions = exceptions || [];
+        return list.map((item) => {
+            if (item.match(/\|\d+$/) || exceptions.includes(item)) {
+                return item;
+            } else if (qualifyFn(item)) {
+                return `${item}|0`;
+            } else {
+                return item;
+            }
+        });
+    }
+
+    return {
+        name: 'DAX',
+        case_insensitive: true,
+        // does not include {} or HTML tags `</`
+        illegal: /[{}]|<\//,
+        keywords: {
+            $pattern: /\b[\w\.]+/,
+            keyword: reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),
+            literal: LITERALS,
+            type: TYPES,
+            built_in: POSSIBLE_WITHOUT_PARENS
+        },
+        contains: [{
+                begin: regex.either(...COMBOS),
+                relevance: 0,
+                keywords: {
+                    $pattern: /[\w\.]+/,
+                    keyword: KEYWORDS.concat(COMBOS),
+                    literal: LITERALS,
+                    type: TYPES
+                },
+            },
+            {
+                className: "type",
+                begin: regex.either(...MULTI_WORD_TYPES)
+            },
+            FUNCTION_CALL,
+            VARIABLE,
+            STRING,
+            QUOTED_IDENTIFIER,
+            hljs.C_NUMBER_MODE,
+            hljs.C_BLOCK_COMMENT_MODE,
+            COMMENT_MODE,
+            OPERATOR
+        ]
+    };
+}
+
+module.exports = dax;
\ No newline at end of file
diff --git a/node_modules/highlight.js/lib/languages/dax.js.js b/node_modules/highlight.js/lib/languages/dax.js.js
new file mode 100644
index 0000000..97d93ad
--- /dev/null
+++ b/node_modules/highlight.js/lib/languages/dax.js.js
@@ -0,0 +1,11 @@
+function emitWarning() {
+    SQL
+    if (!emitWarning.warned) {
+        emitWarning.warned = true;
+        console.log(
+            'Deprecation (warning): Using file extension in specifier is deprecated, use "highlight.js/lib/languages/dax" instead of "highlight.js/lib/languages/dax.js"'
+        );
+    }
+}
+emitWarning();
+module.exports = require('./dax.js');
\ No newline at end of file
